"use strict";(self.webpackChunkui=self.webpackChunkui||[]).push([[2034],{"./packages/ui/stories/theme/breakpoints.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>breakpoints_stories});var objectSpread2=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),button_component=__webpack_require__("./packages/ui/src/core/button/button.component.tsx"),button_mixin=__webpack_require__("./packages/ui/src/core/button/button.mixin.ts"),button_size=__webpack_require__("./packages/ui/src/utils/types/size/button-size.ts"),button_color=__webpack_require__("./packages/ui/src/utils/types/color/button-color.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js");function _createMdxContent(props){const _components={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(_components.h1,{id:"breakpoints",children:"Breakpoints"}),"\n",(0,jsx_runtime.jsx)("p",{class:"description",children:"API that enables the use of breakpoints in a wide variety of contexts."}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The breakpoints are used internally in various components to make them responsive, but you can also take advantage of them for controlling the layout of your application."}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"default-breakpoints",children:"Default breakpoints"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Each breakpoint (a key) matches with a ",(0,jsx_runtime.jsx)(_components.em,{children:"fixed"})," screen width (a value):"]}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"xs,"})," extra-small: 0px"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"sm,"})," small: 577px"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"md,"})," medium: 769px"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"lg,"})," large: 1085px"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"xl,"})," extra-large: 1343px"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"xxl,"})," extra-extra-large: 1601px"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"xxxl,"})," extra-extra-extra-large: 1921px"]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"css-media-queries",children:"CSS Media Queries"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"CSS media queries are the idiomatic approach to make your UI responsive.\r\nThe theme provides four styles helpers to do so:"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.a,{href:"#themebreakpointsupkey--media-query",children:"theme.breakpoints.up(key)"})}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.a,{href:"#themebreakpointsdownkey--media-query",children:"theme.breakpoints.down(key)"})}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.a,{href:"#themebreakpointsonlykey--media-query",children:"theme.breakpoints.only(key)"})}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.a,{href:"#themebreakpointsbetweenstart-end--media-query",children:"theme.breakpoints.between(start, end)"})}),"\n"]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["In the Canvas for this story, we changed the ",(0,jsx_runtime.jsx)(_components.a,{href:"https://github.com/scaleflex/ui/blob/master/packages/ui/src/core/button/button.mixin.ts#L9",rel:"nofollow",children:"colors"})," for the button component based on the screen width."]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"const StyledButton = styled(Button)(\r\n  ({ theme }) => css`\r\n    ${theme.breakpoints.between('sm', 'md')} {\r\n      ${colorButtonMixin[ButtonColor.Secondary]}\r\n    }\r\n    ${theme.breakpoints.down('sm')} {\r\n      ${colorButtonMixin[ButtonColor.Link]}\r\n    }\r\n    ${theme.breakpoints.between('md', 'lg')} {\r\n      ${colorButtonMixin[ButtonColor.Primary]}\r\n    }\r\n    ${theme.breakpoints.up('xl')} {\r\n      ${colorButtonMixin[ButtonColor.Error]}\r\n    }\r\n  `\r\n);\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"breakpoints-classes",children:"Breakpoints Classes"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"We also provides a set of classes that can be used on the container that you need to apply the same breakpoints as the ones provided by the theme.\r\nThis can be used if you want to depend on a container width instead of vewport width. It will be applied to all children inside this container."}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"you can use this classes manually or you can this helper to return the right class depending on the width provided"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.a,{href:"#themebreakpointsgetbreakpointclasswidth--breakpoint-class",children:"theme.breakpoints.getBreakpointClass(width, hideSelector)"})}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Each breakpoint (a key) matches with a class:"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"xs,"})," extra-small: '.sfx-breakpoint-xs'"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"sm,"})," small: '.sfx-breakpoint-sm'"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"md,"})," medium: '.sfx-breakpoint-md'"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"lg,"})," large: '.sfx-breakpoint-lg'"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"xl,"})," extra-large: '.sfx-breakpoint-xl'"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"xxl,"})," extra-extra-large: '.sfx-breakpoint-xxl'"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"xxxl,"})," extra-extra-extra-large: '.sfx-breakpoint-xxxl'"]}),"\n"]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Note"}),": This classes will override media queries breakpoints."]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"custom-breakpoints",children:"Custom breakpoints"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["You define your project's breakpoints in the ",(0,jsx_runtime.jsx)(_components.code,{children:"theme.breakpoints"})," section of your theme."]}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.a,{href:"/customization/default-theme/?expand-path=$.breakpoints.values",children:(0,jsx_runtime.jsx)(_components.code,{children:"theme.breakpoints.values"})}),": Default to the ",(0,jsx_runtime.jsx)(_components.a,{href:"#default-breakpoints",children:"above values"}),". The keys are your screen names, and the values are the min-width where that breakpoint should start."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.a,{href:"/customization/default-theme/?expand-path=$.breakpoints.classes",children:(0,jsx_runtime.jsx)(_components.code,{children:"theme.breakpoints.classes"})}),": Default to the ",(0,jsx_runtime.jsx)(_components.a,{href:"#breakpoints-classes",children:"above values"}),". The keys are your screen names, and the values are classes."]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"If you change the default breakpoints's values, you need to provide them all:"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"const theme = {\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 600,\r\n      md: 900,\r\n      lg: 1200,\r\n      xl: 1536,\r\n      xxl: 1920,\r\n      xxxl: 2560,\r\n    },\r\n    clasess: {\r\n      xs: '.sfx-breakpoint-xs',\r\n      sm: '.sfx-breakpoint-sm',\r\n      md: '.sfx-breakpoint-md',\r\n      lg: '.sfx-breakpoint-lg',\r\n      xl: '.sfx-breakpoint-xl',\r\n      xxl: '.sfx-breakpoint-xxl',\r\n      xxxl: '.sfx-breakpoint-xxxl',\r\n    },\r\n  },\r\n};\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"api",children:"API"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"themebreakpointsgetbreakpointclasswidth-hideselector--breakpoint-class",children:(0,jsx_runtime.jsx)(_components.code,{children:"theme.breakpoints.getBreakpointClass(width, hideSelector) => breakpoint class"})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"arguments",children:"Arguments"}),"\n",(0,jsx_runtime.jsxs)(_components.ol,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"width"})," (",(0,jsx_runtime.jsx)(_components.em,{children:"number"}),"): A breakpoint width."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"hideSelector"})," (",(0,jsx_runtime.jsx)(_components.em,{children:"boolean"}),"): to remove the class css selector. ",(0,jsx_runtime.jsx)(_components.code,{children:"default: false"})]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"returns",children:"Returns"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"breakpoint class"}),": A breakpoint class ready to be used with styled components, it will be applied when it matches the nearest breakpoint intialized in the theme."]}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"examples",children:"Examples"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"const styled = styled.div(\r\n  ({ theme }) => `\r\n      background-color: blue;\r\n      // Match [md, ∞)\r\n      //       [1201px, ∞)\r\n      ${theme.breakpoints.md} & {\r\n         background-color: red;\r\n      }\r\n    `\r\n);\r\n\r\nreturn (\r\n  <div className={`${theme.breakpoints.getBreakpointClass(1201, true)}`}>\r\n    <Styled />\r\n  </div>\r\n);\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"themebreakpointsupkey--media-query",children:(0,jsx_runtime.jsx)(_components.code,{children:"theme.breakpoints.up(key) => media query"})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"arguments-1",children:"Arguments"}),"\n",(0,jsx_runtime.jsxs)(_components.ol,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"key"})," (",(0,jsx_runtime.jsx)(_components.em,{children:"string"}),"): A breakpoint key (",(0,jsx_runtime.jsx)(_components.code,{children:"xs"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"sm"}),", etc)."]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"returns-1",children:"Returns"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"media query"}),": A media query string ready to be used with styled components, which matches screen width greater than the screen size given by the breakpoint key."]}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"examples-1",children:"Examples"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-js",children:"const styles = styled.div(\r\n  ({ theme }) => `\r\n      background-color: blue;\r\n      // Match [md, ∞)\r\n      //       [1201px, ∞)\r\n      ${theme.breakpoints.up('md')} {\r\n         background-color: red;\r\n      }\r\n    `\r\n);\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"themebreakpointsdownkey--media-query",children:(0,jsx_runtime.jsx)(_components.code,{children:"theme.breakpoints.down(key) => media query"})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"arguments-2",children:"Arguments"}),"\n",(0,jsx_runtime.jsxs)(_components.ol,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"key"})," (",(0,jsx_runtime.jsx)(_components.em,{children:"string"}),"): A breakpoint key (",(0,jsx_runtime.jsx)(_components.code,{children:"xs"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"sm"}),", etc)."]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"returns-2",children:"Returns"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"media query"}),": A media query string ready to be used with styled components, which matches screen width less than the screen size given by the breakpoint key."]}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"examples-2",children:"Examples"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-js",children:"const styles = styled.div(\r\n  ({ theme }) => `\r\n      background-color: blue;\r\n      // Match [0, md)\r\n      //       [0, 1201px)\r\n      ${theme.breakpoints.down('md')} {\r\n         background-color: red;\r\n      }\r\n    `\r\n);\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"themebreakpointsonlykey--media-query",children:(0,jsx_runtime.jsx)(_components.code,{children:"theme.breakpoints.only(key) => media query"})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"arguments-3",children:"Arguments"}),"\n",(0,jsx_runtime.jsxs)(_components.ol,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"key"})," (",(0,jsx_runtime.jsx)(_components.em,{children:"string"}),"): A breakpoint key (",(0,jsx_runtime.jsx)(_components.code,{children:"xs"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"sm"}),", etc)."]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"returns-3",children:"Returns"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"media query"}),": A media query string ready to be used with styled components, which matches screen width starting from the screen size given by the breakpoint key and stopping at the screen size given by the next breakpoint key."]}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"examples-3",children:"Examples"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-js",children:"const styles = styled.div(\r\n  ({ theme }) => `\r\n      background-color: blue;\r\n      // Match [md, md + 1)\r\n      //       [md, lg)\r\n      //       [1201px, 1921px)\r\n      ${theme.breakpoints.only('md')} {\r\n         background-color: red;\r\n      }\r\n    `\r\n);\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"themebreakpointsbetweenstart-end--media-query",children:(0,jsx_runtime.jsx)(_components.code,{children:"theme.breakpoints.between(start, end) => media query"})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"arguments-4",children:"Arguments"}),"\n",(0,jsx_runtime.jsxs)(_components.ol,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"start"})," (",(0,jsx_runtime.jsx)(_components.em,{children:"string"}),"): A breakpoint key (",(0,jsx_runtime.jsx)(_components.code,{children:"xs"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"sm"}),", etc)."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"end"})," (",(0,jsx_runtime.jsx)(_components.em,{children:"string"}),"): A breakpoint key (",(0,jsx_runtime.jsx)(_components.code,{children:"xs"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"sm"}),", etc)."]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"returns-4",children:"Returns"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"media query"}),": A media query string ready to be used with styled components, which matches screen width greater than the screen size given by the breakpoint key in the first argument and less than the screen size given by the breakpoint key in the second argument."]}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"examples-4",children:"Examples"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-js",children:"const styles = styled.div(\r\n  ({ theme }) => `\r\n      background-color: blue;\r\n      // Match [sm, md)\r\n      //       [768px, 1201px)\r\n      ${theme.breakpoints.between('sm', 'md')} {\r\n         background-color: red;\r\n      }\r\n    `\r\n);\n"})})]})}const breakpoints_stories={title:"Theme/Breakpoints",tags:["autodocs"],parameters:{docs:{page:function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},viewport:{defaultViewport:"lg"}}};var defaultArgs={children:"Upload",size:button_size.M.Md,color:button_color.m.Secondary,disabled:!1,loading:!1},StyledButton=(0,styled_components_browser_esm.Ay)(button_component.A).withConfig({componentId:"sc-1ampwm8-0"})((function(_ref){var theme=_ref.theme;return(0,styled_components_browser_esm.AH)(["","{","}","{","}","{","}","{","}"],theme.breakpoints.between("sm","md"),button_mixin.LJ[button_color.m.Secondary],theme.breakpoints.down("sm"),button_mixin.LJ[button_color.m.LinkPrimary],theme.breakpoints.between("md","lg"),button_mixin.LJ[button_color.m.Primary],theme.breakpoints.up("xl"),button_mixin.LJ[button_color.m.ErrorPrimary])})),Primary={args:(0,objectSpread2.A)({},defaultArgs),render:function render(_ref2){var children=_ref2.children;return react.createElement(StyledButton,null,children)}};Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...defaultArgs\n  },\n  render: ({\n    children\n  }) => <StyledButton>{children}</StyledButton>\n}",...Primary.parameters?.docs?.source}}};const __namedExportsOrder=["Primary"]}}]);