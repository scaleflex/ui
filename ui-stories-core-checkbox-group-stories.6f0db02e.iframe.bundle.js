"use strict";(self.webpackChunkui=self.webpackChunkui||[]).push([[8517],{"./packages/icons/src/info-outline.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__,N:()=>InfoOutline});var D_projects_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_utils_functions__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/icons/src/utils/functions/intrinsic-component.ts"),_excluded=["color","size"],InfoOutline=(0,_utils_functions__WEBPACK_IMPORTED_MODULE_1__.n)((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?"currentColor":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?14:_ref$size,rest=(0,D_projects_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__.A)(_ref,_excluded);return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",Object.assign({ref,width:size,height:size,viewBox:"0 0 50 50",fill:"none",xmlns:"http://www.w3.org/2000/svg"},rest),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M25 50C11.2033 50 0 38.7967 0 25C0 11.2033 11.2033 0 25 0C38.7967 0 50 11.2033 50 25C50 38.7967 38.6929 50 25 50ZM25 3.52697C13.1743 3.52697 3.63071 13.1743 3.63071 24.8963C3.63071 36.6183 13.278 46.2656 25 46.2656C36.8257 46.2656 46.3693 36.6183 46.3693 24.8963C46.3693 13.1743 36.8257 3.52697 25 3.52697Z",fill:color}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M28.3755 13.125C28.3755 11.3992 26.9765 10 25.2505 10C23.5245 10 22.1255 11.3992 22.1255 13.125C22.1255 14.8516 23.5245 16.25 25.2505 16.25C26.9765 16.25 28.3755 14.8516 28.3755 13.125Z",fill:color}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M20.563 38.5H29.938C30.8009 38.5 31.5005 37.8012 31.5005 36.9375C31.5005 36.0746 30.8009 35.375 29.938 35.375H28.3755V20.9375C28.3755 20.0746 27.6759 19.375 26.813 19.375H20.563C19.7001 19.375 19.0005 20.0746 19.0005 20.9375C19.0005 21.8012 19.7001 22.5 20.563 22.5H22.1255V35.375H20.563C19.7001 35.375 19.0005 36.0746 19.0005 36.9375C19.0005 37.8012 19.7001 38.5 20.563 38.5Z",fill:color}))}));const __WEBPACK_DEFAULT_EXPORT__=InfoOutline;InfoOutline.__docgenInfo={description:"",methods:[],displayName:"InfoOutline",props:{color:{defaultValue:{value:"'currentColor'",computed:!1},required:!1},size:{defaultValue:{value:"14",computed:!1},required:!1}}}},"./packages/ui/stories/core/checkbox-group.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>checkbox_group_stories});var slicedToArray=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),objectWithoutProperties=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),objectSpread2=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),react=__webpack_require__("./node_modules/react/index.js"),info_outline=__webpack_require__("./packages/icons/src/info-outline.tsx"),LabelPosition_After="after",types_size=__webpack_require__("./packages/ui/src/core/check-box/types/size.ts"),type=__webpack_require__("./packages/ui/src/core/check-box/types/type.ts"),default_palette=__webpack_require__("./packages/ui/src/theme/roots/palette/entity/default-palette.ts"),color=__webpack_require__("./packages/ui/src/utils/types/palette/color.ts"),intrinsic_component=__webpack_require__("./packages/ui/src/utils/functions/intrinsic-component.ts"),check_box_component=__webpack_require__("./packages/ui/src/core/check-box/check-box.component.tsx"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),generate_class_names=__webpack_require__("./packages/ui/src/utils/functions/generate-class-names.ts"),apply_display_names=__webpack_require__("./packages/ui/src/utils/functions/apply-display-names.ts"),defineProperty=__webpack_require__("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js"),font_variant=__webpack_require__("./packages/ui/src/utils/types/typography/font-variant.ts"),sizeCheckboxGroupMixin=(0,defineProperty.A)((0,defineProperty.A)({},types_size.o.Sm,(function(_ref){return _ref.theme.typography.font[font_variant.B.LabelMedium]})),types_size.o.Md,(function(_ref2){return _ref2.theme.typography.font[font_variant.B.LabelLarge]})),check_box_styles=__webpack_require__("./packages/ui/src/core/check-box/check-box.styles.ts"),Label=styled_components_browser_esm.Ay.span.attrs({className:(0,generate_class_names.e)("CheckBoxGroup","Label")}).withConfig({componentId:"sc-gshoib-0"})((function(_ref){var theme=_ref.theme,_ref$$labelPosition=_ref.$labelPosition,$labelPosition=void 0===_ref$$labelPosition?"after":_ref$$labelPosition,_ref$size=_ref.size,size=void 0===_ref$size?types_size.o.Sm:_ref$size,disabled=_ref.disabled;return(0,styled_components_browser_esm.AH)(["display:inline-block;align-items:center;"," ",":4px;color:",";cursor:",";white-space:nowrap;text-overflow:ellipsis;overflow:hidden;"],sizeCheckboxGroupMixin[size],"margin-".concat("after"===$labelPosition?"left":"right"),theme.palette[color.Q.TextPrimary],disabled?"default":"pointer")})),CheckBoxGroup=styled_components_browser_esm.Ay.label.attrs({className:(0,generate_class_names.e)("CheckBoxGroup","root")}).withConfig({componentId:"sc-gshoib-1"})((function(_ref2){var disabled=_ref2.disabled;return(0,styled_components_browser_esm.AH)(["position:relative;display:inline-flex;column-gap:4px;align-items:center;max-width:100%;cursor:",";&:hover{","{","}}"],disabled?"default":"pointer",check_box_styles.A.UnCheckedIcon,!disabled&&(0,styled_components_browser_esm.AH)(["display:flex;"]))}));const check_box_group_styles=(0,apply_display_names.v)({CheckBoxGroup,Label});var check_box_utils=__webpack_require__("./packages/ui/src/core/check-box/check-box.utils.ts"),_excluded=["size","label","checkBoxProps","checkBoxGroupProps","readOnly","disabled","labelPosition","icon","checked"],check_box_group_component_CheckBoxGroup=(0,intrinsic_component.n)((function(_ref,ref){var _ref$size=_ref.size,size=void 0===_ref$size?types_size.o.Sm:_ref$size,label=_ref.label,checkBoxProps=_ref.checkBoxProps,checkBoxGroupProps=_ref.checkBoxGroupProps,_ref$readOnly=_ref.readOnly,readOnly=void 0!==_ref$readOnly&&_ref$readOnly,_ref$disabled=_ref.disabled,disabled=void 0!==_ref$disabled&&_ref$disabled,_ref$labelPosition=_ref.labelPosition,labelPosition=void 0===_ref$labelPosition?LabelPosition_After:_ref$labelPosition,icon=_ref.icon,_ref$checked=_ref.checked,checked=void 0!==_ref$checked&&_ref$checked,rest=(0,objectWithoutProperties.A)(_ref,_excluded),textRef=(0,react.useRef)(null),_useState=(0,react.useState)(!1),_useState2=(0,slicedToArray.A)(_useState,2),isEllipsisActive=_useState2[0],setIsEllipsisActive=_useState2[1],content=[react.createElement(check_box_component.A,Object.assign({size,key:"checkbox",checkBoxProps,disabled,readOnly,checked},rest))],labelContent=react.createElement(check_box_group_styles.Label,{key:"label",title:function getTextTooltip(){if("string"==typeof label&&isEllipsisActive)return label}(),onMouseOver:function handleTextTooltip(){var _textRef$current,_textRef$current2;null!==textRef.current&&textRef.current&&setIsEllipsisActive((null==textRef||null===(_textRef$current=textRef.current)||void 0===_textRef$current?void 0:_textRef$current.offsetWidth)<(null==textRef||null===(_textRef$current2=textRef.current)||void 0===_textRef$current2?void 0:_textRef$current2.scrollWidth))},ref:textRef,disabled:Boolean(disabled),$labelPosition:labelPosition,size},label);return"before"===labelPosition?content.unshift(labelContent):content.push(labelContent),react.createElement(check_box_group_styles.CheckBoxGroup,Object.assign({disabled,ref},checkBoxGroupProps),content,"function"==typeof icon?icon({size:(0,check_box_utils.C)(size),color:default_palette.IW[color.Q.IconsSecondary]}):icon)}));const check_box_group_component=check_box_group_component_CheckBoxGroup;check_box_group_component_CheckBoxGroup.__docgenInfo={description:"",methods:[],displayName:"CheckBoxGroup",props:{checked:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: ChangeEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"ChangeEvent",elements:[{name:"HTMLInputElement"}],raw:"ChangeEvent<HTMLInputElement>"},name:"event"}],return:{name:"void"}}},description:""},checkBoxProps:{required:!1,tsType:{name:"ReactInputHTMLAttributes",raw:"React.InputHTMLAttributes<HTMLInputElement>",elements:[{name:"HTMLInputElement"}]},description:""},readOnly:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},disabled:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},size:{required:!1,tsType:{name:"Values",elements:[{name:"Size"}],raw:"Values<typeof Size>"},description:"",defaultValue:{value:"'sm'",computed:!1}},type:{required:!1,tsType:{name:"Values",elements:[{name:"Type"}],raw:"Values<typeof Type>"},description:""},label:{required:!1,tsType:{name:"string"},description:""},checkBoxGroupProps:{required:!1,tsType:{name:"ReactLabelHTMLAttributes",raw:"React.LabelHTMLAttributes<HTMLLabelElement>",elements:[{name:"HTMLLabelElement"}]},description:""},labelPosition:{required:!1,tsType:{name:"Values",elements:[{name:"LabelPosition"}],raw:"Values<typeof LabelPosition>"},description:"",defaultValue:{value:"'after'",computed:!1}},icon:{required:!1,tsType:{name:"union",raw:"React.ReactNode | ((props: IconProps) => React.ReactNode)",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"unknown"}]},description:""}}};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),ForwardRefNote=__webpack_require__("./packages/ui/stories/shared/ForwardRefNote.tsx");function _createMdxContent(props){const _components={h2:"h2",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:["\n","\n","\n",(0,jsx_runtime.jsx)(dist.hE,{}),"\n",(0,jsx_runtime.jsx)(dist.Pd,{}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"basic-checkboxes",children:"Basic checkboxes"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{of:Primary,withToolbar:!0,layout:"centered"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"api",children:"API"}),"\n",(0,jsx_runtime.jsx)(dist.ov,{sort:"alpha"}),"\n",(0,jsx_runtime.jsx)(ForwardRefNote.A,{})]})}var checkbox_group_stories_excluded=["checked"];const checkbox_group_stories={title:"Inputs/Checkbox/CheckBoxGroup",component:check_box_group_component,tags:["autodocs"],argTypes:{icon:{description:"Icon to show after checkbox` icon={(props) => <QuestionMarkOutline {...props} />}` otherwise `icon={<QuestionMarkOutline />}`"},checked:{description:"If true, the component is checked."},label:{description:"checkbox label."},labelPosition:{description:"label position, `before` or `after` the checkbox."},checkBoxProps:{description:"[Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attributes) applied to the checkbox input element."},checkBoxGroupProps:{description:"Attributes applied to the root element"},disabled:{description:"If true, the component is disabled."},onChange:{description:"Callback fired when the state is changed"},readOnly:{description:"If true, the component is readonly."},size:{description:"Size of the checkbox, `sm` or `md`"},type:{description:"Type of the checkbox, `checkbox` or `intermediate`"}},parameters:{docs:{subtitle:"CheckboxGroup is a wrapper used to group Checkbox components.",page:function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}}};var defaultArgs={label:"label",checked:!1,readOnly:!1,disabled:!1,labelPosition:LabelPosition_After,size:types_size.o.Sm,type:type.Z.Checkbox},Primary={args:(0,objectSpread2.A)((0,objectSpread2.A)({},defaultArgs),{},{icon:function icon(props){return react.createElement(info_outline.A,props)}}),render:function render(_ref){var checked=_ref.checked,args=(0,objectWithoutProperties.A)(_ref,checkbox_group_stories_excluded),_useState=(0,react.useState)(!1),_useState2=(0,slicedToArray.A)(_useState,2),checkedState=_useState2[0],setCheckedState=_useState2[1];return(0,react.useEffect)((function(){setCheckedState(checked||!1)}),[checked]),react.createElement(check_box_group_component,Object.assign({},args,{checked:checkedState,onChange:function onChange(event){return setCheckedState(event.target.checked)}}))}};const __namedExportsOrder=["Primary"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...defaultArgs,\n    icon: (props: IconProps) => <InfoOutline {...props} />\n  },\n  render: ({\n    checked,\n    ...args\n  }) => {\n    const [checkedState, setCheckedState] = useState(false);\n    useEffect(() => {\n      setCheckedState(checked || false);\n    }, [checked]);\n    return <CheckBoxGroup {...args} checked={checkedState} onChange={event => setCheckedState(event.target.checked)} />;\n  }\n}",...Primary.parameters?.docs?.source}}}}}]);